grep: ./width: input file is also the output
./tests/check_source.c:49:    ck_assert_float_eq(lightsource->width, PI / 7);
./tests/check_source.c:50:    ck_assert_int_eq(lightsource->penetrating_power, 7);
./tests/check_source.c:51:    ck_assert_int_eq(lightsource->n_poly, 3);
./tests/check_source.c:53:    ck_assert_int_eq(lightsource->light_polygons[0].x, 0);
./tests/check_source.c:54:    ck_assert_int_eq(lightsource->light_polygons[0].y, 0);
./tests/check_source.c:55:    ck_assert_int_eq(lightsource->light_polygons[0].red, 255);
./tests/check_source.c:56:    ck_assert_int_eq(lightsource->light_polygons[0].green, 252);
./tests/check_source.c:57:    ck_assert_int_eq(lightsource->light_polygons[0].blue, 187);
./tests/check_source.c:58:    ck_assert_int_eq(lightsource->light_polygons[0].light_power, 50);
./tests/check_source.c:59:    ck_assert_int_eq(lightsource->light_polygons[0].width, 0);
./tests/check_source.c:61:    ck_assert_int_eq(lightsource->light_polygons[1].x, 0);
./tests/check_source.c:62:    ck_assert_int_eq(lightsource->light_polygons[1].y, 0);
./tests/check_source.c:63:    ck_assert_int_eq(lightsource->light_polygons[1].red, 255);
./tests/check_source.c:64:    ck_assert_int_eq(lightsource->light_polygons[1].green, 252);
./tests/check_source.c:65:    ck_assert_int_eq(lightsource->light_polygons[1].blue, 187);
./tests/check_source.c:66:    ck_assert_int_eq(lightsource->light_polygons[1].light_power, 30);
./tests/check_source.c:67:    ck_assert_int_eq(lightsource->light_polygons[1].width, 36);
./tests/check_source.c:69:    ck_assert_int_eq(lightsource->light_polygons[2].x, 0);
./tests/check_source.c:70:    ck_assert_int_eq(lightsource->light_polygons[2].y, 0);
./tests/check_source.c:71:    ck_assert_int_eq(lightsource->light_polygons[2].red, 255);
./tests/check_source.c:72:    ck_assert_int_eq(lightsource->light_polygons[2].green, 252);
./tests/check_source.c:73:    ck_assert_int_eq(lightsource->light_polygons[2].blue, 187);
./tests/check_source.c:74:    ck_assert_int_eq(lightsource->light_polygons[2].light_power, 20);
./tests/check_source.c:75:    ck_assert_int_eq(lightsource->light_polygons[2].width, 72);
./tests/check_source.c:91:    ck_assert_float_eq(lightsource->width, 0.0);
./tests/check_source.c:92:    ck_assert_int_eq(lightsource->penetrating_power, 7);
./tests/check_source.c:93:    ck_assert_int_eq(lightsource->n_poly, 5);
./tests/check_source.c:95:    ck_assert_int_eq(lightsource->light_polygons[0].x, -10);
./tests/check_source.c:96:    ck_assert_int_eq(lightsource->light_polygons[0].y, -10);
./tests/check_source.c:97:    ck_assert_int_eq(lightsource->light_polygons[0].red, 255);
./tests/check_source.c:98:    ck_assert_int_eq(lightsource->light_polygons[0].green, 252);
./tests/check_source.c:99:    ck_assert_int_eq(lightsource->light_polygons[0].blue, 187);
./tests/check_source.c:100:    ck_assert_int_eq(lightsource->light_polygons[0].light_power, 10);
./tests/check_source.c:101:    ck_assert_int_eq(lightsource->light_polygons[0].width, 0);
./tests/check_source.c:103:    ck_assert_int_eq(lightsource->light_polygons[1].x, 10);
./tests/check_source.c:104:    ck_assert_int_eq(lightsource->light_polygons[1].y, -10);
./tests/check_source.c:105:    ck_assert_int_eq(lightsource->light_polygons[1].red, 255);
./tests/check_source.c:106:    ck_assert_int_eq(lightsource->light_polygons[1].green, 252);
./tests/check_source.c:107:    ck_assert_int_eq(lightsource->light_polygons[1].blue, 187);
./tests/check_source.c:108:    ck_assert_int_eq(lightsource->light_polygons[1].light_power, 10);
./tests/check_source.c:109:    ck_assert_int_eq(lightsource->light_polygons[1].width, 0);
./tests/check_source.c:111:    ck_assert_int_eq(lightsource->light_polygons[2].x, -10);
./tests/check_source.c:112:    ck_assert_int_eq(lightsource->light_polygons[2].y, -10);
./tests/check_source.c:113:    ck_assert_int_eq(lightsource->light_polygons[2].red, 255);
./tests/check_source.c:114:    ck_assert_int_eq(lightsource->light_polygons[2].green, 252);
./tests/check_source.c:115:    ck_assert_int_eq(lightsource->light_polygons[2].blue, 187);
./tests/check_source.c:116:    ck_assert_int_eq(lightsource->light_polygons[2].light_power, 10);
./tests/check_source.c:117:    ck_assert_int_eq(lightsource->light_polygons[2].width, 0);
./tests/check_source.c:119:    ck_assert_int_eq(lightsource->light_polygons[3].x, -10);
./tests/check_source.c:120:    ck_assert_int_eq(lightsource->light_polygons[3].y, 10);
./tests/check_source.c:121:    ck_assert_int_eq(lightsource->light_polygons[3].red, 255);
./tests/check_source.c:122:    ck_assert_int_eq(lightsource->light_polygons[3].green, 252);
./tests/check_source.c:123:    ck_assert_int_eq(lightsource->light_polygons[3].blue, 187);
./tests/check_source.c:124:    ck_assert_int_eq(lightsource->light_polygons[3].light_power, 10);
./tests/check_source.c:125:    ck_assert_int_eq(lightsource->light_polygons[3].width, 0);
./tests/check_source.c:127:    ck_assert_int_eq(lightsource->light_polygons[4].x, 0);
./tests/check_source.c:128:    ck_assert_int_eq(lightsource->light_polygons[4].y, 0);
./tests/check_source.c:129:    ck_assert_int_eq(lightsource->light_polygons[4].red, 255);
./tests/check_source.c:130:    ck_assert_int_eq(lightsource->light_polygons[4].green, 252);
./tests/check_source.c:131:    ck_assert_int_eq(lightsource->light_polygons[4].blue, 187);
./tests/check_source.c:132:    ck_assert_int_eq(lightsource->light_polygons[4].light_power, 50);
./tests/check_source.c:133:    ck_assert_int_eq(lightsource->light_polygons[4].width, 0);
./src/source.c:24:    return source->penetrating_power;
./src/source.c:32:    return sin(angle) * source->light_polygons[i].x + cos(angle) * source->light_polygons[i].y;
./src/source.c:40:    return sin(angle) * source->light_polygons[i].y + cos(angle) * source->light_polygons[i].x;
./src/source.c:47:    int coef = source->light_polygons[i].width;
./src/entity_manager.c:168:    for (int i=0; i<source->n_poly; i++) {
./src/entity_manager.c:177:        float width          = source->width;
./src/entity_manager.c:182:            source->width+width_corr,
./src/entity_manager.c:194:            source->light_polygons[i].red,
./src/entity_manager.c:195:            source->light_polygons[i].green,
./src/entity_manager.c:196:            source->light_polygons[i].blue,
./src/entity_manager.c:197:            source->light_polygons[i].light_power
