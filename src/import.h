#include "global.h"

#ifndef IMPORT_H
#define IMPORT_H

#define PROPER_PACK_COUNT   1
#define BUFFER_SIZE         2
#define DOUBLE_BYTE         2
#define COORDS_PER_RECT     4
#define PREAMBULE_LEN       2

#define FIRST_HALF          0
#define SECOND_HALF         1

extern const char *LEVEL_READ_MODE        ;
extern const char *LEVEL_STRUCTURE_SUFFIX ;
extern const char *LEVEL_TILESET_SUFFIX   ;
extern const char *SEPARATOR              ;

extern const int ANIMATION_PREAMBULE[PREAMBULE_LEN];
extern const int WOBBLE_PREAMBULE[PREAMBULE_LEN]  ;
extern const int LIGHTSOURCE_PREAMBULE[PREAMBULE_LEN];
extern const int LEVEL_PREAMBULE[PREAMBULE_LEN]    ;

enum READ_LEVEL {
    READ_LEVEL_IDLE,
    READ_LEVEL_PREAMBULE_FIRST_HALF,
    READ_LEVEL_PREAMBULE_SECOND_HALF,
    READ_LEVEL_X_SIZE,
    READ_LEVEL_Y_SIZE, 
    READ_LEVEL_TILES_SUM,
    READ_LEVEL_TILE_SUM,
    READ_LEVEL_TILE_X,
    READ_LEVEL_TILE_Y,
    READ_LEVEL_ALL_TILES_READ,
};

enum READ_ANIMATION {
    READ_ANIMATION_PREAMBULE_IDLE,
    READ_ANIMATION_PREAMBULE_FIRST_HALF,
    READ_ANIMATION_PREAMBULE_SECOND_HALF,
    READ_ANIMATIONS_NUMBER,
    READ_ANIMATION_IDX,
    READ_ANIMATION_N_FRAMES,
    READ_ANIMATION_DELAY,
    READ_ANIMATION_HANDLE_X,
    READ_ANIMATION_HANDLE_Y,
    READ_ANIMATION_RECT,
    READ_ANIMATION_HITBOX_PER_FRAME,
    READ_ANIMATION_HITBOX_RECT,
    READ_ANIMATION_ALL_READ,
};

enum READ_WOBBLE {
    READ_WOBBLE_IDLE,
    READ_WOBBLE_PREAMBULE_FIRST_HALF,
    READ_WOBBLE_PREAMBULE_SECOND_HALF,
    READ_WOBBLE_NUMBER,
    READ_WOBBLE_SIGN, 
    READ_WOBBLE_COEF, 
    READ_WOBBLE_ALL_READ,
};

enum READ_LIGHTSOURCE {
    READ_LIGHTSOURCE_IDLE,
    READ_LIGHTSOURCE_PREAMBULE_FIRST_HALF,
    READ_LIGHTSOURCE_PREAMBULE_SECOND_HALF,
    READ_LIGHSOURCE_WIDTH,
    READ_LIGHSOURCE_PENETRATING_POWER,
    READ_LIGHSOURCE_POLYGONS_NUMBER,
    READ_LIGHSOURCE_POLYGON_X,
    READ_LIGHSOURCE_POLYGON_Y,
    READ_LIGHSOURCE_POLYGON_RED,
    READ_LIGHSOURCE_POLYGON_GREEN,
    READ_LIGHSOURCE_POLYGON_BLUE,
    READ_LIGHSOURCE_POLYGON_POWER,
    READ_LIGHSOURCE_POLYGON_WIDTH,
    READ_LIGHSOURCE_WOBBABLE,
    READ_LIGHSOURCE_ALL_READ,
};

char* IMP_concatenate_string(const char *a, const char *b, const char *d);
unsigned short int IMP_cast_val_to_dec(char vals[DOUBLE_BYTE]);

#endif
